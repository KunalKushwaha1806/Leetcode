long long gcd(long long x, long long y) {
    if (y == 0) return x;
    return gcd(y, x % y);
}

long long lcm(long long x, long long y) {
    return x * (y / gcd(x, y));
}

long long countUglyNumbers(long long x, int a, int b, int c) {
    long long ab = lcm(a, b);
    long long bc = lcm(b, c);
    long long ac = lcm(a, c);
    long long abc = lcm(a, lcm(b, c));

    return x / a + x / b + x / c 
           - x / ab - x / bc - x / ac 
           + x / abc;
}

int nthUglyNumber(int n, int a, int b, int c) {
    long long low = 1, high = 2e9;
    long long result = -1;
    
    while (low <= high) {
        long long mid = low + (high - low) / 2;
        
        if (countUglyNumbers(mid, a, b, c) >= n) {
            result = mid;
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    
    return (int)result;
}
